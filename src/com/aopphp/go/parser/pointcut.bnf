{
  parserClass="com.aopphp.go.parser.PointcutParser"
  parserUtilClass="com.aopphp.go.parser.PointcutParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix=""
  psiImplClassSuffix="Impl"
  psiPackage="com.aopphp.go.psi"
  psiImplPackage="com.aopphp.go.psi.impl"

  elementTypeHolderClass="com.aopphp.go.psi.PointcutTypes"
  elementTypeClass="com.aopphp.go.psi.PointcutElementType"
  tokenTypeClass="com.aopphp.go.psi.PointcutTokenType"

  tokens=[
    nsSeparator='\'
    annotation='@'
    lp='('
    rp=')'
    objectAccess='->'
    staticAccess='::'
    asterisk='*'
    alternation='|'
    negation='!'
    conjunction='&&'
    disjunction='||'
    doubleAsterisk='**'
    subclassFilter='+'
    reference='$this'
    comment='regexp://.*'
    namePart='regexp:[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*'
  ]
}
pointcutFile ::= pointcutExpression;

pointcutExpression ::=
    (conjugatedExpression '||' pointcutExpression)
  | conjugatedExpression;

conjugatedExpression ::=
    (negatedExpression '&&' conjugatedExpression)
  | negatedExpression;

negatedExpression ::=
    brakedExpression
  | '!' brakedExpression;

brakedExpression ::=
    singlePointcut
  | '(' pointcutExpression ')';


singlePointcut ::=
    accessPointcut
  | annotatedAccessPointcut
  | executionPointcut
  | annotatedExecutionPointcut
  | withinPointcut
  | annotatedWithinPointcut
  | initializationPointcut
  | staticInitializationPointcut
  | cflowbelowPointcut
  | dynamicExecutionPointcut
  | pointcutReference;

accessPointcut ::= access '(' memberReference ')'

executionPointcut ::=
    execution '(' methodExecutionReference ')'
  | execution '(' functionExecutionReference ')'

withinPointcut ::= within '(' classFilter ')'

annotatedAccessPointcut ::= (annotation access '(' namespaceName ')')

annotatedExecutionPointcut ::= (annotation execution '(' namespaceName ')')

annotatedWithinPointcut ::= (annotation within '(' namespaceName ')')

initializationPointcut ::= (initialization '(' classFilter ')')

staticInitializationPointcut ::= (staticinitialization '(' classFilter ')')

cflowbelowPointcut ::= (cflowbelow '(' executionPointcut ')');

dynamicExecutionPointcut ::= (dynamic '(' memberReference '(' argumentList ')' ')');

pointcutReference ::= ([namespaceName|'$this'] '->' namePatternPart);

methodExecutionReference ::= (memberReference '(' argumentList ')');

functionExecutionReference ::= (namespacePattern '(' argumentList ')');

memberReference ::= (memberModifiers classFilter memberAccessType namePatternPart);

classFilter ::= namespacePattern '+'?;

argumentList ::= '*';

memberAccessType ::= ['::'|'->'];

namespacePattern ::=
    '**'
  | namePatternPart ('\' namespacePattern)*
  | namePatternPart '\' '**';

namePatternPart ::=
    '*' namePatternPart*
  | namePart '|' namePatternPart+
  | namePart namePatternPart*

namespaceName ::= namePart ('\' namespaceName)*

memberModifiers ::= memberModifier ([' ' | '|'] memberModifier)*

memberModifier ::= private|protected|public|final